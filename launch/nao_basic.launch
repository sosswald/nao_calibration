<launch>
   <!--env name="PYTHONPATH" value="$(env PYTHONPATH)" /--> 
   <arg name="nao_ip"  />
   <arg name="nao_port" />
   <arg name="larm_file"  />
   <arg name="larm_bool" default="false"  />
   <arg name="rarm_file"  />
   <arg name="rarm_bool" default="false"   />
   <arg name="lleg_file"  />
   <arg name="lleg_bool" default="false"   />
   <arg name="rleg_file"  />
   <arg name="rleg_bool" default="false"   />

 <!-- nao controller -->
  <node pkg="nao_driver" type="nao_controller.py" name="pose_controller" required="true" args="--pip=$(arg nao_ip) --pport=$(arg nao_port)" output="screen" />

  <!-- joint states publisher -->
  <node pkg="naoqi_driver_py" type="naoqi_joint_states.py" name="naoqi_joint_states" required="true" args="--pip=$(arg nao_ip) --pport=$(arg nao_port)" />

  

<!-- camera driver -->
  <!--include file="$(find naoqi_sensors)/launch/camera.launch" -->
     <!--arg name="nao_ip" value="$(arg nao_ip)" /-->
  <!--/include-->



  <!-- robot state publisher -->
  <include file="$(find nao_description)/launch/for_calibration.launch" >
  </include>

   <!-- Nao pose manager -->
   <node pkg="naoqi_pose" type="pose_manager.py" name="pose_manager" >
     <rosparam file="$(find kinematic_calibration)/config/nao_calibration.yaml" />
     <rosparam file="$(find naoqi_pose)/config/basic_poses.yaml" command="load" ns="poses" />
     <rosparam if="$(arg larm_bool)" file="$(arg larm_file)" command="load" ns="poses" />
     <rosparam if="$(arg rarm_bool)" file="$(arg rarm_file)" command="load" ns="poses" />
     <rosparam if="$(arg lleg_bool)" file="$(arg lleg_file)" command="load" ns="poses" />
     <rosparam if="$(arg rleg_bool)" file="$(arg rleg_file)" command="load" ns="poses" />
  </node>

 <param name="/camera/calibration_file_bottom" value="file://$(find kinematic_calibration)/config/camera.yaml"/>

</launch>
